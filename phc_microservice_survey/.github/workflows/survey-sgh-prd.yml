name: Survey.CI.SGH.PROD

on:
  workflow_dispatch:

env:
  profile: ${{ secrets.PROFILE }}
  secret: ${{ secrets.SECRET }}
  accesskey: ${{ secrets.ACCESSKEY }}
  secretkey: ${{ secrets.SECRETKEY }}
  region: ${{ secrets.REGION }}
  IMAGE_NAME: sampoornaswarajfoundation/survey

jobs:
  build:
    name: ‚öíÔ∏è Build App
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    
    - name: Checkout Repo
      uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        #cache: 'npm'
        #cache-dependency-path: ${{github.workspace}}/package.json
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Build
      run: npm run build --if-present
    
    - name: Run Unit Tests
      run: npm run test
      working-directory: test

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: test/test-results.xml    
  
    - name: Checkout Docker Repo
      uses: actions/checkout@v3
      with:
        repository: SampoornaSwarajFoundation/PHC_Infrastructure
        ref: stg-infra
        path: survey-svc
        token: ${{ secrets.GHPAT }}
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.GCR }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHPAT }}   
        
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y.%m.%d')"
    
    - name: Build and Push Image
      id: gcr_push
      uses: docker/build-push-action@v2
      with:
          context: .
          file: survey-svc/survey-svc/Dockerfile
          push: true
          tags: |
            ghcr.io/sampoornaswarajfoundation/survey:v1.0
        
  deploy:
    name: üì¶ Deploy to SGH
    environment:
      name: SGH-PROD
    needs: [build]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Infra Repo
        uses: actions/checkout@v3
        with:
          repository: SampoornaSwarajFoundation/PHC_Infrastructure
          ref: stg-infra
          path: sgh-phcdt
          token: ${{ secrets.GHPAT }} 
      
      - name: Change directory to sgh-phcdt
        run: |
          cd sgh-phcdt/sgh-phcdt/
          ls -ltr
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.7
          cli_config_credentials_token: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.GCR }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHPAT }}  
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESSKEYID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Terraform Init
        id: init
        run: |
            cd sgh-phcdt/sgh-phcdt/
            terraform init
        working-directory: ${{ github.workspace }}
      
      - name: Terraform Validate
        id: validate
        run: |
            cd sgh-phcdt/sgh-phcdt/
            terraform validate -no-color
      
      - name: Terraform Plan
        id: plan
        run: |
            cd sgh-phcdt/sgh-phcdt/
            terraform plan -no-color
        working-directory: ${{ github.workspace }}
      
      - name: Get Image Version
        id: image-version
        env: 
          SECRETS_CONTEXT: "${{ toJson(secrets) }}"
        run: |
          $secrets = ($env:SECRETS_CONTEXT | ConvertFrom-Json -AsHashtable)
          $token = $secrets.GHPAT
          $object = Invoke-RestMethod -Method Get -Uri https://api.github.com/orgs/SampoornaSwarajFoundation/packages/container/survey/versions -Headers @{Authorization = 'Bearer ' + $token}
          $tags = $object.metadata.container.tags
          $imageversion = $tags[0]
          Write-Output $imageversion
          echo "::set-output name=imageversion::$imageversion" 
        shell: pwsh 
      
      - name: Tag and Push image
        run: |
          docker pull ${{secrets.GCR}}/${{env.IMAGE_NAME}}:${{steps.image-version.outputs.imageversion}}
          docker tag ${{secrets.GCR}}/${{env.IMAGE_NAME}}:${{steps.image-version.outputs.imageversion}} ${{secrets.GCR}}/${{env.IMAGE_NAME}}:latest
          docker push ${{secrets.GCR}}/${{env.IMAGE_NAME}}:latest
      
      - name: Update Secrets
        run: |
          cd sgh-phcdt/sgh-phcdt/
          python3 updateAWSCredScript.py --file "../modules/eks/survey.tf" --accesskey "${{ secrets.ACCESSKEY }}" --secretkey "${{ secrets.SECRETKEY }}"
          cat ../modules/eks/survey.tf
      
      - name: Terraform Apply
        run: |
          cd sgh-phcdt/sgh-phcdt/
          terraform apply -auto-approve -var='survey-svc-image=ghcr.io/sampoornaswarajfoundation/survey:latest'
        working-directory: '${{ github.workspace }}'
