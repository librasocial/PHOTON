name: ChildCare.CI.SGH.PROD

on:
  workflow_dispatch:

# Env variables for DEV environment
env:
  profile: ${{ secrets.PROFILE }}
  secret: ${{ secrets.SECRET }}
  accesskey: ${{ secrets.ACCESSKEY }}
  secretkey: ${{ secrets.SECRETKEY }}
  region: ${{ secrets.REGION }}
  IMAGE_NAME: sampoornaswarajfoundation/childcare

jobs:
  build:
    name: ‚öíÔ∏è Build App
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout Repo
      uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml --batch-mode --update-snapshots verify
    
    - name: Run Junit Tests
      run: mvn -B test --file pom.xml
    
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: target/surefire-reports/*.xml
    
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        name: artifact
        path: ${{github.workspace}}/target
    
  gcr-push:
    name: üê≥ Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
    
    - name: Download a Build Artifact
      uses: actions/download-artifact@v3.0.0
      with:
        name: artifact
        path: ${{github.workspace}}/target
    
    - name: Checkout Docker Repo
      uses: actions/checkout@v3
      with:
        repository: SampoornaSwarajFoundation/PHC_Infrastructure
        ref: stg-infra
        path: child-care
        token: ${{ secrets.GHPAT }}
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.GCR }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHPAT }}
    
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y.%m.%d')"
    
    - name: Build and Push Image
      id: gcr_push
      uses: docker/build-push-action@v2
      with:
          context: .
          file: child-care/child-care/Dockerfile
          push: true
          tags: |
            ghcr.io/sampoornaswarajfoundation/childcare:v1.0
  
  deploy:
    name: üì¶ Deploy to SGH-PROD
    needs: [build, gcr-push]
    environment:
      name: SGH-PROD
    runs-on: ubuntu-latest
    continue-on-error: false
    
    steps:
      
    - name: Checkout Infra Repo
      uses: actions/checkout@v3
      with:
          repository: SampoornaSwarajFoundation/PHC_Infrastructure
          ref: stg-infra
          path: sgh-phcdt
          token: ${{ secrets.GHPAT}} 
      
    - name: Change directory to sgh-phcdt
      run: |
        cd sgh-phcdt/sgh-phcdt/
        ls -ltr
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.GCR }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHPAT }}
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.13.7
        cli_config_credentials_token: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Terraform Init
      id: init
      run: |
        cd sgh-phcdt/sgh-phcdt/
        terraform init
      working-directory: ${{ github.workspace }}
      
    - name: Terraform Validate
      id: validate
      run: |
        cd sgh-phcdt/sgh-phcdt/
        terraform validate -no-color
      
    - name: Terraform Plan
      id: plan
      run: |
        cd sgh-phcdt/sgh-phcdt/
        terraform plan -no-color
      working-directory: ${{ github.workspace }}
      
    - name: Get Image Version
      id: image-version
      env: 
        SECRETS_CONTEXT: "${{ toJson(secrets) }}"
      run: |
          $secrets = ($env:SECRETS_CONTEXT | ConvertFrom-Json -AsHashtable)
          $token = $secrets.GHPAT
          $object = Invoke-RestMethod -Method Get -Uri https://api.github.com/orgs/SampoornaSwarajFoundation/packages/container/childcare/versions -Headers @{Authorization = 'Bearer ' + $token}
          $tags = $object.metadata.container.tags
          $imageversion = $tags[0]
          Write-Output $imageversion
          echo "::set-output name=imageversion::$imageversion" 
      shell: pwsh 
      
    - name: Tag and Push image
      run: |
        docker pull ${{secrets.GCR}}/${{env.IMAGE_NAME}}:${{steps.image-version.outputs.imageversion}}
        docker tag ${{secrets.GCR}}/${{env.IMAGE_NAME}}:${{steps.image-version.outputs.imageversion}} ${{secrets.GCR}}/${{env.IMAGE_NAME}}:latest
        docker push ${{secrets.GCR}}/${{env.IMAGE_NAME}}:latest
    
    - name: Update Secrets
      run: |
        cd sgh-phcdt/sgh-phcdt/
        python3 updateAWSCredScript.py --file "../modules/eks/childcare.tf" --accesskey "${{ secrets.ACCESSKEY }}" --secretkey "${{ secrets.SECRETKEY }}"
        cat ../modules/eks/childcare.tf
    
    - name: Terraform Apply
      run: |
        cd sgh-phcdt/sgh-phcdt/
        terraform apply -auto-approve -var='childcare-svc-image=ghcr.io/sampoornaswarajfoundation/childcare:latest'
      working-directory: '${{ github.workspace }}'
