name: Reservations.CI.DEV

on:
  push:
    branches: main
  pull_request:
    branches: main

# Env variables for DEV environment
env:
  profile: ${{ secrets.PROFILE }}
  secret: ${{ secrets.SECRET }}
  accesskey: ${{ secrets.ACCESSKEY }}
  secretkey: ${{ secrets.SECRETKEY }}
  region: ${{ secrets.REGION }}
  IMAGE_NAME: sampoornaswarajfoundation/reservation-service

jobs:
  build:
    name: ⚒️ Build App
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    
    - name: Checkout Repo
      uses: actions/checkout@v2
        
    - name: Checkout Docker Repo
      uses: actions/checkout@v2
      with:
        repository: SampoornaSwarajFoundation/PHC_Infrastructure
        ref: main
        path: reservation-svc
        token: ${{ secrets.GHPAT}}
    
    # - name: Cache node modules
    #   uses: actions/cache@v2
    #   env:
    #     cache-name: cache-node-modules
    #   with:
    #     # npm cache files are stored in `~/.npm` on Linux/macOS
    #     path: ~/.npm
    #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    #     restore-keys: |
    #        ${{ runner.os }}-node-
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install Dependenicies
      run: npm ci
    
    - name: npm Build
      run: npm run build --if-present
    
#     - name: npm Test
#       run: npm run test
#       working-directory: test
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y.%m.%d')" >> $GITHUB_OUTPUT
    
    - name: Docker Layer Caching
      uses: satackey/action-docker-layer-caching@v0.0.11
      continue-on-error: true
    
    - name: Build and Push Image
      id: gcr_push
      uses: docker/build-push-action@v2
      with:
          context: .
          file: reservation-svc/reservation-svc/Dockerfile
          push: true
          tags: |
            ghcr.io/sampoornaswarajfoundation/reservation-service:latest
            ghcr.io/sampoornaswarajfoundation/reservation-service:${{ steps.date.outputs.date }}.${{ github.run_number }}

  deploy:
    name: 📦 Deploy to DEV
    needs: [build]
    environment:
      name: DEV
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Infra Repo
        uses: actions/checkout@v2
        with:
          repository: SampoornaSwarajFoundation/PHC_Infrastructure
          ref: main
          path: dev
          token: ${{ secrets.GHPAT}} 
      
      - name: Change directory to dev
        run: |
              cd dev/dev/
              ls -ltr
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.7
          cli_config_credentials_token: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESSKEYID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Terraform Init
        id: init
        run: |
            cd dev/dev/
            terraform init
        working-directory: ${{ github.workspace }}
      
      - name: Terraform Validate
        id: validate
        run: |
            cd dev/dev/
            terraform validate -no-color
      
      - name: Terraform Plan
        id: plan
        run: |
            cd dev/dev/
            terraform plan -no-color
        working-directory: ${{ github.workspace }} 
      
      - name: Get Image Version
        id: image-version
        env: 
          SECRETS_CONTEXT: "${{ toJson(secrets) }}"
        run: |
          $secrets = ($env:SECRETS_CONTEXT | ConvertFrom-Json -AsHashtable)
          $token = $secrets.GHPAT
          $object = Invoke-RestMethod -Method Get -Uri https://api.github.com/orgs/SampoornaSwarajFoundation/packages/container/reservation-service/versions -Headers @{Authorization = 'Bearer ' + $token}
          $tags = $object.metadata.container.tags
          $imageversion = $tags[0]
          Write-Output $imageversion
          echo "::set-output name=imageversion::$imageversion" 
        shell: pwsh 
      
      - name: Terraform Apply
        run: |
            cd dev/dev/
            terraform apply -auto-approve -var='reservations-svc-image=ghcr.io/sampoornaswarajfoundation/reservation-service:${{steps.image-version.outputs.imageversion}}'
        working-directory: '${{ github.workspace }}'
